
    <p>Mostra o texto escrito no imput logo após clicar no botão
      o segundo botão limpa o H3
    </p>
    <input #inputMessage type="text">
    <button (click)="ValorInput1(inputMessage.value)">Click-Me</button>
    <button (click)="limparTexto1('')">LIMPANDO O TEXTO 1</button>
    <h3>{{mensagem1}}</h3>
  </div>
  <!-- Este dois scripts abaixo mostra o texto depois de clicado 
      mostra o valor que foi passado no input é precisoo dos dois 
      ele,mentos abaixo para que funcione corretamente-->
   
  <div class="content" role="main">


     <p>Mostra o texto escrito logo pós a escrita no input
      sem precisar apertar em botão nenhum</p>
    <input #inputMessage type="text" [(ngModel)]="mensagem2">
    <button (click)="limparTexto2('')">LIMPANDO O TEXTO 2</button>
    <h3>{{mensagem2}}</h3>
    w




    <!-- <p>Migual o primeiro</p>
    
    <input #inputMessage type="text" [(ngModel)]="mensagem3">
    <button (click)="ValorInput3(inputMessage.value)">Click-Me</button>
    
    
    Mostra a mensagem que vier da função mennsagem
    <h3>{{mensagem3}}</h3>
     -->
  </div>
  <!-- ------------------------------------------------------- -->
  <!--        é nessa div que se começa a trabalhar 
neste trecho se       trabalha o botão ocultar r 
mostrar uma mensagem   em h3 no código abaixo -->
  <div class="content" role="main">
    <p>Função que eu me reconheço quando clicado no botão</p>
    <button (click)="funcaoMudar()">Verdade Secretas</button>

    <ng-container *ngIf="show; else showPublic">
      <h3>Alexandre</h3>
    </ng-container>

    <ng-template #showPublic>
      <h3>O melhor do mundo</h3>
    </ng-template>

  </div>
  <!-- esta div abaixo mostra um array buscado de components
estes são as variaveis nums e nums2
nums = [10,20]
//usado para criar a tabela este código abaixo
nums2 = [10,20, 25, 33, 40, 56] -->
  <div class="content" role="main">
    <p>Uma simples div de HTML sem formatação de Conteiner do Angular que enumera e mostra a primeira coluna</p>
    <h1 *ngFor="let num of nums2;
                     index as i;
                     count as total;
                     even as even;
                     odd as odd">

      {{i+1}}. {{num}}

    </h1>
  </div>
  <!-- este comando mostra apenas como criar um 
conteiner do Angular "ng-container" e uma tabela no container com os
dados de uma lista-->
  <div class="content" role="main">
    <table>
      <p>Abaixo apenas um conteiner</p>
      <ng-container *ngFor="let num of nums2; index as i; count as total; even as even; odd as odd">
        <tr>
          <td>{{i+1}}. {{num}}</td>
        </tr>
      </ng-container>
    </table>
  </div>
  <!-- este comando mostra apenas como criar um 
conteiner do Angular "ng-container" estilizada com duas cores usadas anteriormente
dentro donde verdadeiro fica grenn e falso fica red-->
  <div class="content" role="main">


    <table>
      <p>Abaixo apenas um conteiner com duas cores em uma mesma coluna</p>
      <ng-container *ngFor="let num of nums2; index as i; count as total; even as even; odd as odd">
        <tr [style]="even ? green : red" style="color:black; text-align:center;">
          <td>{{i+1}}. {{num}}</td>
        </tr>
      </ng-container>

    </table>


  </div>
  <!-- este comando mostra apenas como criar um 
conteiner do Angular "ng-container" estilizada com duas cores usadas anteriormente
dentro de uma tabela incrementando e decrementando-->
  <div class="content" role="main">


    <p>Abaixo apenas um conteiner com duas cores em coluna separadas</p>

    <table>

      <ng-container *ngFor="let num of nums2; index as i; count as total; even as even; odd as odd">
        <tr [style]="even ? green : red" style="color:black; text-align:center;">
          <td style="width:50px">
            {{i+1}}.
          </td>
          <td style="width:100px">
            {{num}}
          </td>
        </tr>

      </ng-container>

    </table>

  </div>
  <div class="content" role="main">


    <p>Abaixo apenas um conteiner com duas cores em coluna separadas e dois botões de incremento</p>


    <div>
      <button (click)="inc()">+</button>
      <button (click)="dec()">-</button>
    </div>
    <table>

      <ng-container *ngFor="let num of nums; index as i; count as total; even as even; odd as odd">
        <tr [style]="even ? green : red" style="color:white; text-align:center;">
          <td style="width:50px">
            {{i+1}}.
          </td>
          <!-- <td style="width:100px">
            {{num}}
          </td> -->
        </tr>

      </ng-container>

    </table>

  </div>
  
  <div class="content" role="main">

    <p>Abaixo apenas um conteiner com duas no background</p>

    <div>
      <button (click)="inc()">+</button>
      <button (click)="dec()">-</button>
    </div>
    <table>

      <ng-container *ngFor="let num of nums; index as i; count as total; even as even; odd as odd">
        <tr [style.background-color]="even ? 'green' : 'red'" style="color:white; text-align:center;">
          <td style="width:50px">
            {{i+1}}.
          </td>
          <td style="width:100px">
            {{num}}
          </td>
        </tr>

      </ng-container>

    </table>

  </div>
  <div class="content" role="main">
    <table>
      <p>este é apenas uma lista ordenada sem comparação com nada</p>
      <ng-container *ngFor="let num of nums2; index as i; count as total; even as even; odd as odd">
        <tr>
          <td>
            {{i+1}}
          </td>
          <td>
            {{num}}
          </td>
          <td>
            {{total}}
          </td>
          <td>
            {{even}}
          </td>
          <td>
            {{odd}}
          </td>

        </tr>
      </ng-container>

    </table>

  </div>


  <!--  este conteiner mostra algum atributo da lista neste caso o even
  o  <tr *ngIf="even"> mostrará na tabela o que vier na resposta do even
    que neste caso é verdadeiro então mostrará o que tiver na tabela que for verdd=adeiro
   -->

  <div class="content" role="main">
    <table>
      <p>começa com verdadeiro primeiro</p>
      <ng-container *ngFor="let num of nums2; index as i; count as total; even as even; odd as odd">
        <tr *ngIf="even">
          <td>
            {{i+1}}
          </td>
          <td>
            {{even}}
          </td>
          <td>
            {{num}}
          </td>
          <td>
            {{total}}
          </td>

          <td>
            {{odd}}
          </td>

        </tr>
      </ng-container>

    </table>
    <!-- 
    
  este conteiner mostra algum atributo da lista neste caso o even
  o  <tr *ngIf="odd"> mostrará na tabela o que vier na resposta do even
    que neste caso é falso então mostrará o que tiver na tabela que for falso primeiro
   -->

    <div class="content" role="main">
      <table>
        <p>começa com falso primeiro</p>
        <ng-container *ngFor="let num of nums2; index as i; count as total; even as even; odd as odd">

          <tr *ngIf="odd">

            <td>
              {{i+1}}
            </td>
            <td>
              {{even}}
            </td>
            <td>
              {{odd}}
            </td>
            <td>
              {{num}}
            </td>
            <td>
              {{total}}
            </td>



          </tr>
        </ng-container>

      </table>


    </div>

    <!-- trabalharemos aqui nesta tabela estilizando-as
  dentro dele sera estilizado para criar uma tabela com
  duas cores diferentes -->


  <app-about></app-about>
  <app-login></app-login>
  <app-registro></app-registro>
  <app-home></app-home>
  <app-login></app-login>
  